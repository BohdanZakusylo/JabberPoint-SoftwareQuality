## This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven
#
## This workflow uses actions that are not certified by GitHub.
## They are provided by a third-party and are governed by
## separate terms of service, privacy policy, and support
## documentation.
#
#name: Java CI with Maven
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up JDK 17
#      uses: actions/setup-java@v3
#      with:
#        java-version: '17'
#        distribution: 'oracle'
#        cache: maven
#
#    - name: Build with Maven
#      run: mvn -B package --file pom.xml
#
#    - name: Run tests with Maven
#      run: mvn -B package test --file pom.xml
#    - name: JAR Snapshot Uploading
#      uses: actions/upload-artifact@v3
#      with:
#        name: JabberPoint-SoftwareQuality-1.0-SNAPSHOT
#        path: /home/runner/work/JabberPoint-SoftwareQuality/JabberPoint-SoftwareQuality/target/JabberPoint-SoftwareQuality-1.0-SNAPSHOT.jar
##    - name: Check code with super-linter
##      uses: github/super-linter@v4
##      env:
##        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
##        IGNORE_GENERATED_FILES: true
##        VALIDATE_ALL_CODEBASE: true
##        RUN_CHECKSTYLE: true
##        LINTER_RULES_PATH: checkstyle.xml
##        CHECKSTYLE_RULESET: 'checkstyle.xml'
#    - name: Check Code Style
#      run: mvn checkstyle:check


name: Java CI with Maven and Jar Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run tests with Maven
        run: mvn -B package test --file pom.xml

      - name: JAR Snapshot Uploading
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: JabberPoint-SoftwareQuality-1.0-SNAPSHOT
          path: /home/runner/work/JabberPoint-SoftwareQuality/JabberPoint-SoftwareQuality/target/JabberPoint-SoftwareQuality-1.0-SNAPSHOT.jar

      - name: Check Code Style
        run: mvn checkstyle:check

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          service_account: ${{ secrets.JAR_DEPLOYMENT_EMAIL }}
          credentials_json: ${{ secrets.JAR_DEPLOYMENT_KEY }}
          project_id: github-actions-jar-deployment

      - name: Upload JAR file to Google Cloud Storage
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: '/home/runner/work/JabberPoint-SoftwareQuality/JabberPoint-SoftwareQuality/target/JabberPoint-SoftwareQuality-1.0-SNAPSHOT.jar'
          destination: 'software-quality-jar/'

